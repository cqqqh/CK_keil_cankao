C51 COMPILER V9.06   TEST1_MAIN                                                            04/20/2012 16:19:01 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE TEST1_MAIN
OBJECT MODULE PLACED IN test1_main.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE test1_main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*by xzp21st 2009.5 Email:tyter1223@163.com*/
   2          
   3          #include "c8051f340.h"
   4          #include "spi.h"
   5          #include "uart.h"
   6          #include "sd.h"
   7          #include "mcu_init.h"
   8          #include "diskio.h"
   9          #include "ff.h"
*** WARNING C322 IN LINE 302 OF ff.h: unknown identifier
*** WARNING C322 IN LINE 308 OF ff.h: unknown identifier
  10          
  11          BYTE buff[1024]; /*working buffer*/
  12          
  13          DWORD get_fattime (void)
  14          {
  15   1              DWORD tmr = 0;
  16   1              return tmr;
  17   1      }
  18          
  19          /*测试函数*/
  20          void test_readSingleBlock(unsigned long);
  21          void test_writeSingleBlock(unsigned long);
  22          void test_readMultipleBlock(unsigned long, unsigned char);
  23          void test_writeMultipleBlock(unsigned long, unsigned char);
  24          void test_FileWR();
  25          
  26          /*------------------------------------------------------------------------------------*/
  27          /*main*/
  28          int main(void)
  29          {
  30   1              PCA0MD &= ~0x40; /*关内部看门狗*/
  31   1      
  32   1              Init_Devices();
  33   1      
  34   1              CLS;/*windows超级终端清屏*/
  35   1      
  36   1              transmitString("***********************************\r\n");
  37   1              transmitString(" xzp21st's microSD Card Testing..\r\n");
  38   1              transmitString("***********************************\r\n");
  39   1              
  40   1              if(disk_initialize(0))
  41   1                      transmitString("\r\nSD card init fail!\r\n");
  42   1              else
  43   1              {
  44   2                      transmitString("\r\nSD card init success!\r\n");
  45   2                      
  46   2                      /*单块读写测试*/
  47   2                      test_readSingleBlock(0);
  48   2                      test_writeSingleBlock(10000);
  49   2                      
  50   2                      /*多块读写测试*/
  51   2                      test_readMultipleBlock(0, 2);
  52   2                      test_writeMultipleBlock(10000, 2);
  53   2                      
C51 COMPILER V9.06   TEST1_MAIN                                                            04/20/2012 16:19:01 PAGE 2   

  54   2                      /*文件读写测试*/
  55   2                      test_FileWR();
  56   2              }
  57   1      
  58   1              while(1)
  59   1              {       
  60   2                      transmitString("|/-\\\r");
  61   2                      delay(1000);
  62   2                      transmitString("/-\\|\r");
  63   2                      delay(1000);
  64   2                      transmitString("-\\|/\r");
  65   2                      delay(1000);
  66   2                      transmitString("\\|/-\r");
  67   2                      delay(1000);
  68   2                      transmitString("|/-\\\r");
  69   2                      delay(1000);
  70   2              }
  71   1      
  72   1              return 0;
  73   1      }
  74          
  75          /*------------------------------------------------------------------------------------*/
  76          /*for test*/
  77          
  78          /*测试单块读操作*/
  79          void test_readSingleBlock(unsigned long block_addr)
  80          {
  81   1              if(disk_read(0, buff, block_addr, 1)) /*读第block_addr块*/
  82   1                      transmitString("\r\nRead single block operation fail!!!\r\n");
  83   1              else
  84   1              {
  85   2                      transmitString("\r\nRead single block operation success~~~\r\n");
  86   2                      transmitString("\r\nPress any key to display the data~~~\r\n");
  87   2                      receiveByte();
  88   2                      CLS;
  89   2                      displayData(buff, 512);
  90   2              }
  91   1      }
  92          
  93          /*测试单块写操作*/
  94          void test_writeSingleBlock(unsigned long block_addr)
  95          {
  96   1              int i = 0;
  97   1              for(i=0; i<512; i++)
  98   1              {
  99   2                      buff[i] = i+2;
 100   2              }
 101   1              
 102   1              if(disk_write(0, buff, block_addr, 1)) /*向第block_addr块写数据*/
 103   1                      transmitString("\r\nWrite single block operation fail!!!\r\n");
 104   1              else /*写成功*/
 105   1              {       
 106   2                      transmitString("\r\nWrite single block operation success~~~\r\n");
 107   2                      test_readSingleBlock(block_addr);
 108   2              }
 109   1      }
 110          
 111          /*测试多块读操作*/
 112          void test_readMultipleBlock(unsigned long block_addr, unsigned char count)
 113          {
 114   1              if(disk_read(0, buff, block_addr, count)) /*读从第num块开始的两个块*/
 115   1                      transmitString("\r\nRead multiple blocks operation fail!!!\r\n");
C51 COMPILER V9.06   TEST1_MAIN                                                            04/20/2012 16:19:01 PAGE 3   

 116   1              else /*读多块成功*/
 117   1              {
 118   2                      transmitString("\r\nRead multiple blocks operation success~~~\r\n");
 119   2                      transmitString("\r\nPress any key to display the data~~~\r\n");
 120   2                      receiveByte();
 121   2                      CLS;
 122   2                      displayData(buff, 1024);
 123   2              }
 124   1      }
 125          
 126          /*测试多块写操作*/
 127          void test_writeMultipleBlock(unsigned long block_addr, unsigned char count)
 128          {
 129   1              int i = 0;
 130   1              for(i=0; i<1024; i++)
 131   1              {
 132   2                      buff[i] = i+1;
 133   2              }
 134   1              
 135   1              if(disk_write(0, buff, block_addr, count))
 136   1                      transmitString("\r\nWrite multiple blocks operation fail!!!\r\n");
 137   1              else /*写多块成功*/
 138   1              {       
 139   2                      transmitString("\r\nWrite multiple blocks operation success~~~\r\n");
 140   2                      test_readMultipleBlock(block_addr, count);
 141   2              }
 142   1      }
 143          
 144          /*测试文件读写操作,文件大小为512字节*/
 145          void test_FileWR()
 146          {
 147   1              FATFS fs;       /*Work area (file system object) for logical drive*/
 148   1          FIL file;      /*file objects*/
 149   1              UINT bw, br;    /*File R/W count*/
 150   1      
 151   1      
 152   1              int i = 0;
 153   1              for(i=0; i<512; i++)
 154   1              {
 155   2                      buff[i] = i+1;
 156   2              }       
 157   1              /*Register a work area for logical drive 0*/
 158   1          f_mount(0, &fs);
 159   1      
 160   1          /*Create file*/
 161   1          if(f_open(&file, "test.dat", FA_CREATE_ALWAYS | FA_WRITE | FA_READ))
 162   1                      transmitString("\r\nFile creat fail!\r\n");
 163   1              else
 164   1              {       
 165   2                      transmitString("\r\nFile creat success!\r\n");
 166   2      
 167   2                      if(f_write(&file, buff, 512, &bw))
 168   2                              transmitString("\r\nFile write fail!\r\n");
 169   2                      else
 170   2                      {       
 171   3                              transmitString("\r\nFile write success!\r\n");
 172   3                              transmitString("\r\nPress any key to read the file!\r\n");
 173   3                              receiveByte();
 174   3                              if(f_read(&file, buff, 512, &br))
 175   3                                      transmitString("\r\nFile read fail!\r\n");
 176   3                              else
 177   3                              {       
C51 COMPILER V9.06   TEST1_MAIN                                                            04/20/2012 16:19:01 PAGE 4   

 178   4                                      transmitString("\r\nFile read success!\r\n");
 179   4                                      transmitString("\r\nPress any key to display the data!\r\n");
 180   4                                      receiveByte();
 181   4                                      displayData(buff, 512);
 182   4                              }
 183   3                      }
 184   2                      /*Close all files*/
 185   2                      f_close(&file);
 186   2              }
 187   1              
 188   1          /*Unregister a work area before discard it*/
 189   1          f_mount(0, 0);
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    928    ----
   CONSTANT SIZE    =    753    ----
   XDATA SIZE       =   1024    1128
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
